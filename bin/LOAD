#!/usr/local/bin/perl
use strict; use warnings;
use File::Copy;
##########################
# LOAD - set spec-usr ready for use 
# deposit id_rsa in .ssh/ & meta-key in home
my ($src,$node, $grp) = @ARGV;
die "ARG1 src ARG2 node ARG3 grp\nuse full path\n" unless (defined $grp);
##########################
my (@dir);
my ($dh);
my ($gbank, $pool, $ig, $if);
my %net;
##########################
$src =~ s%/\z%%;
my $h = `echo ~`;
chomp $h;
$if = $h.'.ssh/id_rsa';
$ig = $h;
##########################
$gbank = $src.'/BANK/g/';
$pool = $src.'/BANK/pool/';
##########################
print "src: $pool $gbank\n";
print "who: $node $grp\n";
#########################
opendir($dh, $gbank) or die "FAIL gbank\n";
##########################
while (readdir $dh)
{
	my @meta;
	my ($i, $ifh);
##########################
	next if ($_ eq '.' || $_ eq '..');
##########################
	$i = $gbank.$_;
	my $mi = $ig.$_;
	my $iii = $_; $iii =~ s/^.//;
	my $ii = $pool.$iii;
##########################
	open($ifh, '<', $i) or die "FAIL $i $!\n";
	@meta = readline $ifh;
	chomp @meta;
##########################
	$net{$meta[0]} = 0;
	next unless ($meta[0] eq $node);
	next unless ($meta[1] eq $grp);
##########################
	move($i,$mi) or die "FAIL mv $i $!\n";
	move($ii,$if) or die "FAIL mv $ii $!\n";

	`chmod 700 ~/.ssh/id_rsa`;
	print "load: $mi\n";
	last;
}
##########################
print "host: $_\n" for (keys %net);
